<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>